<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>